<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bf.mapper.OrderMapper">
	<!-- <resultMap type="com.bf.book.dto.HomeDto" id="HomeDto"> -->
	<!-- <result column="authorName" property="authorName"/> -->
	<!-- <result column="bookName" property="bookName"/> -->
	<!-- </resultMap> -->
	<delete id="delete_cartWishtList" parameterType="java.util.HashMap">
		delete from
		cart_wish
		where BOOK_NUM = #{bookNum} and id=#{id}
	</delete>
	
	<select id="get-cart2" parameterType="String" resultType="com.bf.main.dto.CategoryPageDto">
		SELECT	bm.book_num, bm.img_path, bm.NAME "book_name",
				au.num "author_num", au.NAME "author_name",
				bm.intro, bm.discount, bm.discount2, bm.rental_period, bm.rental_price, bm.price, bm.type
		FROM bookm bm, (
			SELECT book_num
 			FROM book_category
 			GROUP BY book_num
		) bc, (
			SELECT book_num FROM cart_wish
			WHERE ID = #{id}
			AND cart_wish = 'cart'
        ) ct, author au
		WHERE bm.book_num = bc.book_num
		AND bm.author_num = au.num
        AND bm.book_num = ct.book_num
		<if test="type == 0">
			AND bm.rental_period = 'no'
		</if>
		<if test="type == 1">
			<![CDATA[AND bm.rental_period <> 'no']]>
		</if>
	</select>

	<select id="getCart" parameterType="String" resultType="com.bf.book.dto.HomeDto">
		<![CDATA[
		select bookm.*, bookm.name "bookName", AUTHOR.name "authorName" 
		from bookm, cart_wish, AUTHOR 
		where cart_wish.BOOK_NUM = bookm.BOOK_NUM 
		and cart_wish.id = #{id} 
		and AUTHOR.NUM=bookm.AUTHOR_NUM
		and cart_wish.CART_WISH ='cart'
		]]>
	</select>

	<select id="getWish" parameterType="String" resultType="com.bf.book.dto.HomeDto">
		<![CDATA[
		select bookm.*, bookm.name "bookName", AUTHOR.name "authorName" 
		from bookm, cart_wish, AUTHOR 
		where cart_wish.BOOK_NUM = bookm.BOOK_NUM 
		and cart_wish.id = #{id} 
		and AUTHOR.NUM=bookm.AUTHOR_NUM
		and cart_wish.CART_WISH ='wish'
		]]>
	</select>

	<insert id="insertCart" parameterType="java.util.HashMap">
		insert into cart_wish
		values(cart_num_seq.nextval, #{id}, #{bookNum},'cart')
	</insert>

	<select id="oneCart_Wish" parameterType="java.util.HashMap"
		resultType="String">
		select nvl(num,0) from cart_wish where id=#{id} and
		book_num=#{bookNum}
	</select>

	<insert id="insertWishList" parameterType="java.util.HashMap">
		insert into cart_wish
		values(cart_num_seq.nextval, #{id}, #{bookNum},'wish')
	</insert>
	<insert id="paymentInsert" parameterType="com.bf.order.dto.OrderDto">
	insert into payment(NUM, ORDER_NUM, BOOK_NUM, PRICE, PAYMENT_DATE, PRESENT_CHECK, CANCEL_CHECK, FREE_PASS, 
						ID, PAY_TYPE, POINT_USE, CASH_USE, RENTAL_DATE, RENTAL_STATE, STATE)
	values(payment_num_seq.nextval, #{order_num}, #{book_num}, (
			SELECT round(price * (100 - discount) * (100 - discount2) / 10000, -2) FROM bookm WHERE book_num = #{book_num}
		),
		sysdate,
		#{present_check},#{cancel_check},#{free_pass},#{id},#{pay_type},#{point_use},#{cash_use},sysdate+3,#{rental_state},#{state})
</insert>
	<update id="updatePoint" parameterType="java.util.HashMap">
		UPDATE point SET
		remain=(remain-(#{remain})) WHERE num = (
		SELECT b.num FROM (
		SELECT ROWNUM rnum, A.* FROM (
		SELECT * FROM point WHERE destory_date>SYSDATE AND ID=#{id} ORDER BY
		destory_date ASC)A
		)b WHERE rnum = #{rnum})
	</update>
	<select id="pointSelect" parameterType="java.util.HashMap"
		resultType="com.bf.order.dto.PointDto">
		SELECT * FROM (
		SELECT ROWNUM rnum, A.* FROM (
		SELECT * FROM point WHERE destory_date>SYSDATE AND ID=#{id} ORDER BY
		destory_date ASC)A
		)b WHERE rnum = #{rnum}
	</select>
	<update id="updateZero">
		update point set remain=0, state = 'off' where num =
		#{num}
	</update>
	<select id="getBookSelect" parameterType="int"
		resultType="com.bf.book.dto.HomeDto">
		select bookM.*, bookm.name "bookName", AUTHOR.name "authorName" 
		from bookM, AUTHOR where bookM.AUTHOR_NUM =
		AUTHOR.NUM and book_num=#{book_num}
	</select>
	
	<select id="select-order-list" parameterType="java.util.Map" resultType="com.bf.main.dto.CategoryPageDto">
		SELECT	bm.book_num, bm.img_path, bm.NAME "book_name",
				au.num "author_num", au.NAME "author_name",
				bm.intro, bm.discount, bm.discount2, bm.rental_period, bm.rental_price, bm.price, bm.type
		FROM bookm bm, (
			SELECT book_num
 			FROM book_category
 			GROUP BY book_num
		) bc, author au
		WHERE bm.book_num = bc.book_num
		AND bm.author_num = au.num
    	AND bm.book_num in
		<foreach item="item" index="index" collection="bookList" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>
</mapper>