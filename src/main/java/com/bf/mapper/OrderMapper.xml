<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bf.mapper.OrderMapper">
	<!-- <resultMap type="com.bf.book.dto.HomeDto" id="HomeDto"> -->
	<!-- <result column="authorName" property="authorName"/> -->
	<!-- <result column="bookName" property="bookName"/> -->
	<!-- </resultMap> -->
	<delete id="delete_cartWishtList" parameterType="java.util.HashMap">
		delete from
		cart_wish
		where BOOK_NUM = #{bookNum} and id=#{id}
	</delete>
	
	<select id="get-cart2" parameterType="String" resultType="com.bf.main.dto.CategoryPageDto">
		SELECT	bm.book_num, bm.img_path, bm.NAME "book_name",
				rs."star_point", rs."star_count",
				au.num "author_num", au.NAME "author_name",
				il.num "illur_num", il.NAME "illur_name",
				tr.num "trans_num", tr.name "trans_name",
				pub.pub_num, pub.NAME "pub_name",
				tc.num "third_cate_num", tc.NAME "third_cate_name",
				bm.intro, bm.discount, bm.discount2, bm.rental_period, bm.rental_price, bm.price, bm.type
		FROM bookm bm, (
			SELECT round(sum(star_point) / count(star_point), 1) "star_point", count(star_point) "star_count", book_num
			FROM (
				SELECT rw.* FROM review rw, (
					SELECT DISTINCT ID, book_num
					FROM payment
				) pm
				WHERE rw.book_num = pm.book_num
				AND rw.ID = pm.ID
			)
			GROUP BY book_num
		) rs, (
			SELECT book_num, min(cate3_num) "cate3_num"
    				FROM book_category
    				GROUP BY book_num
		) bc, (
          SELECT book_num FROM cart_wish
          WHERE ID = #{id}
          AND cart_wish = 'cart'
        ) ct, author au, author il, author tr, publisher pub, third_cate tc
				WHERE bm.book_num = rs.book_num(+)
				AND bm.book_num = bc.book_num
				AND bm.author_num = au.num
				AND bm.illustrator_num = il.num
				AND bm.translator_num = tr.num
				AND bm.pub_num = pub.pub_num
				AND bc."cate3_num" = tc.num
        AND bm.book_num = ct.book_num
		<if test="type == 0">
			AND bm.rental_period = 'no'
		</if>
		<if test="type == 1">
			<![CDATA[AND bm.rental_period <> 'no']]>
		</if>
        
	</select>

	<select id="getCart" parameterType="String" resultType="com.bf.book.dto.HomeDto">
		<![CDATA[
		select bookm.*, bookm.name "bookName", AUTHOR.name "authorName" 
		from bookm, cart_wish, AUTHOR 
		where cart_wish.BOOK_NUM = bookm.BOOK_NUM 
		and cart_wish.id = #{id} 
		and AUTHOR.NUM=bookm.AUTHOR_NUM
		and cart_wish.CART_WISH ='cart'
		]]>
	</select>

	<select id="getWish" parameterType="String" resultType="com.bf.book.dto.HomeDto">
		<![CDATA[
		select bookm.*, bookm.name "bookName", AUTHOR.name "authorName" 
		from bookm, cart_wish, AUTHOR 
		where cart_wish.BOOK_NUM = bookm.BOOK_NUM 
		and cart_wish.id = #{id} 
		and AUTHOR.NUM=bookm.AUTHOR_NUM
		and cart_wish.CART_WISH ='wish'
		]]>
	</select>

	<insert id="insertCart" parameterType="java.util.HashMap">
		insert into cart_wish
		values(cart_num_seq.nextval, #{id}, #{bookNum},'cart')
	</insert>

	<select id="oneCart_Wish" parameterType="java.util.HashMap"
		resultType="String">
		select nvl(num,0) from cart_wish where id=#{id} and
		book_num=#{bookNum}
	</select>

	<insert id="insertWishList" parameterType="java.util.HashMap">
		insert into cart_wish
		values(cart_num_seq.nextval, #{id}, #{bookNum},'wish')
	</insert>
	<insert id="paymentInsert" parameterType="com.bf.order.dto.OrderDto">
	insert into payment(NUM,
	ORDER_NUM,
	BOOK_NUM,
	PRICE,
	PAYMENT_DATE,
	PRESENT_CHECK,
	CANCEL_CHECK,
	FREE_PASS,
	ID,
	PAY_TYPE,
	POINT_USE,
	CASH_USE,
	RENTAL_DATE,
	RENTAL_STATE,
	STATE)
	values(payment_num_seq.nextval, #{order_num}, #{book_num}, #{price},
	sysdate,
	#{present_check},#{cancel_check},#{free_pass},#{id},#{pay_type},#{point_use},#{cash_use},sysdate+3,#{rental_state},#{state})
</insert>
	<update id="updatePoint" parameterType="java.util.HashMap">
		UPDATE point SET
		remain=(remain-(#{remain})) WHERE num = (
		SELECT b.num FROM (
		SELECT ROWNUM rnum, A.* FROM (
		SELECT * FROM point WHERE destory_date>SYSDATE AND ID=#{id} ORDER BY
		destory_date ASC)A
		)b WHERE rnum = #{rnum})
	</update>
	<select id="pointSelect" parameterType="java.util.HashMap"
		resultType="com.bf.order.dto.PointDto">
		SELECT * FROM (
		SELECT ROWNUM rnum, A.* FROM (
		SELECT * FROM point WHERE destory_date>SYSDATE AND ID=#{id} ORDER BY
		destory_date ASC)A
		)b WHERE rnum = #{rnum}
	</select>
	<update id="updateZero">
		update point set remain=0, state = 'off' where num =
		#{num}
	</update>
	<select id="getBookSelect" parameterType="int"
		resultType="com.bf.book.dto.HomeDto">
		select bookM.*, bookm.name "bookName", AUTHOR.name "authorName" 
		from bookM, AUTHOR where bookM.AUTHOR_NUM =
		AUTHOR.NUM and book_num=#{book_num}
	</select>
</mapper>