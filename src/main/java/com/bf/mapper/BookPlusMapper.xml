<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bf.mapper.BookPlusMapper">
	<resultMap type="com.bf.book.dto.HomeDto" id="HomeDto">
		<result column="authorName" property="authorName"/>
		<result column="bookName" property="bookName"/>
		<result column="thirdCate" property="thirdCate"/>
	</resultMap>
	
	<resultMap type="com.bf.book.dto.DetailDto" id="DetailDto">
		<result column="book_name" property="book_name"/>
		<result column="book_sub_title" property="book_sub_title"/>
		<result column="illu_num" property="illu_num"/>
		<result column="trans_num" property="trans_num"/>
		<result column="book_price" property="book_price"/>
		<result column="type" property="type"/>
	</resultMap>

	<insert id="insert-review" parameterType="com.bf.book.dto.ReviewDto">
		INSERT INTO review VALUES(review_num_seq.nextval, #{id}, #{book_num}, #{content}, sysdate, #{star_point}, #{spoiler}, #{preference}, #{display})
	</insert>
	
	<select id="getHomeBookInfoList" parameterType="int" resultMap="HomeDto">
		<![CDATA[
			SELECT *
			from (SELECT b.img_path, A.NAME "authorName", b.NAME "bookName", dis.NAME "thirdCate", b.book_num, b.price, b.TYPE, b.author_num, b.rental_price, rownum r
						FROM bookm b, author A, (SELECT DISTINCT b.book_num, t.NAME
					                              FROM bookm b, book_category c, first_cate f, second_cate s, third_cate t
					                              WHERE b.book_num=c.book_num
					                              AND c.cate1_num=f.num
					                              AND c.cate2_num=s.num
					                              AND c.cate1_num=#{firstCate}) dis
									
						WHERE b.author_num=A.num
						AND dis.book_num=b.book_num) rn
			where rn.r <20
		]]>
	</select>
	
	<select id="getFirstCate" parameterType="String" resultType="int">
		select num from first_cate where name=#{firstCateName}
	</select>
	
	<select id="getFirstCateName" parameterType="String" resultType="String">
		select name from first_cate where num=#{firstCate}
	</select>
	
	<select id="getNewBookList" parameterType="java.util.HashMap" resultType="com.bf.book.dto.NewBookDto">
		<![CDATA[
			SELECT *
			FROM (SELECT ROWNUM rnum, A.* 
			      FROM (SELECT b.book_num "book_num", b.img_path, b.NAME "book_name", au.num "author_num", au.NAME "author_name", il.num "illur_num", il.NAME "illur_name", tr.num "trans_num", tr.NAME "trans_name", pu.pub_num "pub_num", pu.NAME "publisher_name", b.intro, b.discount, b.discount2, b.price, b.rental_price
						FROM bookm b, author au, author il, author tr, publisher pu, (SELECT DISTINCT b.book_num
                                                                          FROM bookm b, book_category c, first_cate f, second_cate s
                                                                          WHERE b.book_num=c.book_num
                                                                          AND c.cate1_num=f.num
                                                                          AND c.cate2_num=s.num
                                                                          and c.cate1_num=#{firstCate}) dis
						WHERE b.author_num=au.num
            			and dis.book_num=b.book_num
						AND b.illustrator_num=il.num
						AND b.translator_num=tr.num
						AND b.pub_num=pu.pub_num
						ORDER BY b.write_date DESC)A
			      )r
			where r.rnum >= #{startRow} and r.rnum <= #{endRow}
		]]>
	</select>
	
	<select id="getNewBookCount" parameterType="String" resultType="int">
		<![CDATA[
			SELECT count(*)
			FROM bookm b, book_category c, first_cate f
			WHERE b.book_num=c.book_num
			AND c.cate1_num=f.num
			AND f.num=#{firstCate}
		]]>
	</select>
	
	<select id="select-review-self" parameterType="java.util.Map" resultType="com.bf.book.dto.ReviewDto">
		SELECT * FROM review WHERE book_num = #{book_num} AND ID = #{id}
	</select>
	
	<select id="select-review-list" parameterType="Integer" resultType="com.bf.book.dto.ReviewDto">
		SELECT write_date, num, substr(id,1,3) || '***' "id", book_num, content, star_point, spoiler, preference, display 
		FROM review 
		WHERE book_num = #{book_num} 
		ORDER BY write_date DESC
	</select>
	
	<update id="update-review" parameterType="com.bf.book.dto.ReviewDto">
		UPDATE review SET CONTENT = #{content}, star_point = #{star_point}, spoiler = #{spoiler} WHERE num = #{num}
	</update>

	<select id="getRecomList" parameterType="int" resultMap="HomeDto">
		<![CDATA[
			SELECT  b.img_path, A.NAME "authorName", b.NAME "bookName", b.book_num
			FROM bookm b, author A
			WHERE b.author_num = A.num
			and b.book_num=#{randomBookNum}
		]]>
	</select>
	
	<select id="getRecomCount" parameterType="long" resultType="int">
		SELECT nvl(count(c.cate2_num),0)
		FROM bookm b, book_category c
		WHERE b.book_num=c.book_num
		AND b.book_num =#{book_num}
	</select>
	
	<select id="getRandomBookNum" parameterType="int" resultType="int">
		<![CDATA[
			SELECT b.book_num                                
			from (SELECT b.book_num, ROWNUM r
			      from  bookm b, book_category c, first_cate f
			      WHERE b.book_num=c.book_num
			      AND c.cate1_num=f.num
			      AND f.num=#{firstCate}) b
			where b.r<=20
		]]>			                                
	</select>
	
	<select id="getBookSecondCate" parameterType="int" resultType="int">
		<![CDATA[
			SELECT DISTINCT sc.num
			FROM bookm b, book_category c, second_cate sc
			WHERE b.book_num=c.book_num
			AND c.cate2_num=sc.num
			AND sc.NAME LIKE '%단행본%'
			and sc.first_cate=#{firstCate}
		]]>
	</select>
	
	<select id="getPaperRandomBookNum" parameterType="java.util.HashMap" resultType="int">
		<![CDATA[
			SELECT b.book_num                              
			FROM (SELECT b.book_num, ROWNUM r, sc.NAME
			      from  bookm b, book_category c, first_cate f, second_cate sc
			      WHERE b.book_num=c.book_num
			      AND c.cate1_num=f.num
			      and c.cate2_num=sc.num
			      AND f.num=#{firstCate}
			      and sc.num=#{seconCate}) b
			where b.r>=40
		]]>
	</select>
	
	<select id="getPaperHomeBookInfoList" parameterType="java.util.HashMap" resultMap="HomeDto">
		<![CDATA[
			select *
			from (SELECT b.img_path, A.NAME "authorName", b.NAME "bookName", t.NAME "thirdCate", b.book_num, b.price, b.TYPE, b.author_num, rownum r
			      FROM bookm b, author A, book_category c, third_cate t, first_cate f, second_cate sc
			      WHERE b.author_num=A.num
			      AND b.book_num=c.book_num
			      AND c.cate1_num=f.num
			      AND c.cate3_num=t.num
			      and c.cate2_num=sc.num
			      AND f.num=#{firstCate}
			      and sc.num=#{seconCate}) dis
			where dis.r<=20
		]]>
	</select>
	
	<select id="getPaperNewBookCount" parameterType="java.util.HashMap" resultType="int">
		<![CDATA[
			SELECT count(*)
			FROM bookm b, book_category c, first_cate f, second_cate sc
			WHERE b.book_num=c.book_num
			AND c.cate1_num=f.num
			AND f.num=#{firstCate}
			AND c.cate2_num=sc.num
			and sc.num=#{seconCate}
		]]>
	</select>
	
	<select id="getPaperNewBookList" parameterType="java.util.HashMap" resultType="com.bf.book.dto.NewBookDto">
		<![CDATA[
			SELECT *
			FROM (SELECT ROWNUM rnum, A.* 
			      FROM (SELECT b.book_num "book_num", b.img_path, b.NAME "book_name", au.num "author_num", au.NAME "author_name", il.num "illur_num", il.NAME "illur_name", tr.num "trans_num", tr.NAME "trans_name", pu.pub_num "pub_num", pu.NAME "publisher_name", b.intro, b.discount, b.discount2, b.price, b.rental_price
			      FROM bookm b, author au, author il, author tr, publisher pu, (SELECT DISTINCT b.book_num
			                                                                    FROM bookm b, book_category c, first_cate f, second_cate s
			                                                                    WHERE b.book_num=c.book_num
			                                                                    AND c.cate1_num=f.num
			                                                                    AND c.cate2_num=s.num
			                                                                    AND c.cate1_num=#{firstCate}
			                                                                    and c.cate2_num=#{seconCate}) dis
			      WHERE b.author_num=au.num
			            and dis.book_num=b.book_num
			      AND b.illustrator_num=il.num
			      AND b.translator_num=tr.num
			      AND b.pub_num=pu.pub_num
			      ORDER BY b.write_date DESC)A
			      )r
			where r.rnum >= #{startRow} and r.rnum <= #{endRow}
		]]>
	</select>
	
	<select id="getOverlapThirdCate" parameterType="long" resultType="int">
		SELECT nvl(count(tc.num),0)
		FROM bookm b, book_category c, second_cate sc, third_cate tc
		WHERE b.book_num=c.book_num
		AND c.cate2_num=sc.num
		AND c.cate3_num=tc.num
		and b.book_num=#{book_num}
	</select>
	
	<select id="getOverlapCateName" parameterType="long" resultType="String">
		SELECT DISTINCT tc.NAME
        FROM bookm b, book_category c, second_cate sc, third_cate tc
        where b.book_num=c.book_num
        AND c.cate2_num=sc.num
        AND c.cate3_num=tc.num
        AND b.book_num=#{book_num}
	</select>
	
	<select id="getThirdCateNum" parameterType="String" resultType="int">
		SELECT num
		FROM third_cate
		where name=#{third_cate_name}
	</select>
	
	<select id="getBookAllInfo" parameterType="long" resultMap="DetailDto">
		<![CDATA[
			SELECT book_num, name "book_name", write_date, pub_num, author_num, illustrator_num "illu_num", translator_num "trans_num", price "book_price", support, img_path, file_path, file_size, preference, series_num, sub_title "book_sub_title", discount, discount2, TYPE "type", intro, pub_intro, rental_period, rental_price
			FROM bookm
			where book_num=#{book_num}
		]]>
	</select>
	
	<select id="getSecondCateNum" parameterType="long" resultType="int">
		SELECT DISTINCT sc.num
		FROM second_cate sc, book_category c, bookm b
		WHERE b.book_num=c.book_num
		AND c.cate2_num=sc.num
		and b.book_num=#{book_num}
	</select>
	
	<select id="getSecondCateName" parameterType="long" resultType="String">
		SELECT DISTINCT sc.name
		FROM second_cate sc, book_category c, bookm b
		WHERE b.book_num=c.book_num
		AND c.cate2_num=sc.num
		and b.book_num=#{book_num}
	</select>
	
	<select id="getPubName" parameterType="long" resultType="String">
		SELECT p.name
		FROM bookm b, publisher p
		WHERE b.pub_num=p.pub_num
		and b.book_num=#{book_num}
	</select>
	
	<select id="getTagListCount" parameterType="java.util.ArrayList" resultType="int">
			SELECT nvl(count(b.book_num),0)
			FROM bookm b, keyword_list l
			WHERE b.book_num=l.book_num
			<foreach collection="list" item="tag" separator="" open="" close="">
           		and l.book_num in(SELECT DISTINCT book_num
                FROM keyword_list
                where keyword_num =(SELECT num
                                  FROM keyword
                                  WHERE NAME=#{tag}))
        	</foreach>
	</select>
	
	<select id="getTagBookList" parameterType="java.util.HashMap" resultMap="HomeDto">
			SELECT *
			FROM (SELECT b.img_path, A.NAME "authorName", b.NAME "bookName", p.pub_num, p.NAME "pub_name", b.book_num, b.price, b.TYPE, b.author_num, b.rental_price, ROWNUM r
					FROM bookm b, author A, publisher p
					WHERE b.author_num=A.num
			      AND b.pub_num=p.pub_num
			      and b.book_num in(SELECT DISTINCT b.book_num
			                        FROM bookm b, keyword_list l
			                        WHERE b.book_num=l.book_num
			                        <foreach collection="list" item="query" separator="" open="" close="">
			                        and l.book_num in(SELECT DISTINCT book_num
			                                        FROM keyword_list
			                                        where keyword_num =(SELECT num
			                                                          FROM keyword
			                                                          WHERE NAME=#{query}))
									</foreach>
						             )
					ORDER BY b.NAME DESC) rn
			<foreach collection="page" item="pagea" index="i" separator="" open="" close="">				
				<choose>
					<when test="i==0">
						where rn.r >= #{pagea} 
					</when>
					
					<when test="i==1">
						<![CDATA[
							and rn.r <= #{pagea}
						]]>
					</when>
				</choose>
			</foreach>
	</select>
</mapper>