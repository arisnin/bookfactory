<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bf.mapper.BookPlusMapper">
	<resultMap type="com.bf.book.dto.HomeDto" id="HomeDto">
		<result column="authorName" property="authorName"/>
		<result column="bookName" property="bookName"/>
		<result column="thirdCate" property="thirdCate"/>
	</resultMap>
	
	<resultMap type="com.bf.book.dto.DetailDto" id="DetailDto">
		<result column="book_name" property="book_name"/>
		<result column="book_sub_title" property="book_sub_title"/>
		<result column="illu_num" property="illu_num"/>
		<result column="trans_num" property="trans_num"/>
		<result column="book_price" property="book_price"/>
		<result column="type" property="type"/>
	</resultMap>
	
	<select id="select-author-book" parameterType="java.util.Map" resultType="com.bf.main.dto.CategoryPageDto">
		SELECT * FROM (
			SELECT ROWNUM "rn", sub.* FROM (
				SELECT	bm.book_num, bm.img_path, bm.NAME "book_name",
						rs."star_point", rs."star_count",
						au.num "author_num", au.NAME "author_name",
						il.num "illur_num", il.NAME "illur_name",
						tr.num "trans_num", tr.name "trans_name",
						pub.pub_num, pub.NAME "pub_name",
						tc.num "third_cate_num", tc.NAME "third_cate_name",
						bm.intro, bm.discount, bm.discount2, bm.rental_period, bm.rental_price, bm.price, bm.type,
						nvl(to_date(substr(write_date, 0, 13), 'YYYY"년" MM"월" DD"일"'), SYSDATE - 90) "write_date_idx"
				FROM bookm bm, (
					SELECT round(sum(star_point) / count(star_point), 1) "star_point", count(star_point) "star_count", book_num
					FROM (
						SELECT rw.* FROM review rw, (
							SELECT DISTINCT ID, book_num
							FROM payment
						) pm
						WHERE rw.book_num = pm.book_num
						AND rw.ID = pm.ID
					)
					GROUP BY book_num
				) rs, (
					SELECT book_num, min(cate3_num) "cate3_num"
      				FROM book_category
      				GROUP BY book_num
				) bc, author au, author il, author tr, publisher pub, third_cate tc
				WHERE bm.book_num = rs.book_num(+)
				AND bm.book_num = bc.book_num
				AND bm.author_num = au.num
				AND bm.illustrator_num = il.num
				AND bm.translator_num = tr.num
				AND bm.pub_num = pub.pub_num
				AND bc."cate3_num" = tc.num
				AND bm.author_num = #{authorNum}
				<choose>
					<when test="orderTypeNum == 100">
					ORDER BY "write_date_idx" DESC, book_num
					</when>
					<when test="orderTypeNum == 101">
					ORDER BY rs."star_point" DESC, book_num
					</when>
					<when test="orderTypeNum == 102">
					ORDER BY rs."star_count" DESC, book_num
					</when>
					<otherwise>
					ORDER BY bm.name
					</otherwise>
				</choose>
			) sub
		) rsub
		WHERE rsub."rn" BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<select id="select-author-book-count" parameterType="Integer" resultType="Integer">
		SELECT count(bm.book_num) FROM bookm bm, (
			SELECT book_num FROM book_category
			GROUP BY book_num
		) au
		WHERE author_num = #{authorNum}
		AND bm.book_num = au.book_num
	</select>

	<insert id="insert-review" parameterType="com.bf.book.dto.ReviewDto">
		INSERT INTO review VALUES(review_num_seq.nextval, #{id}, #{book_num}, #{content}, sysdate, #{star_point}, #{spoiler}, #{preference}, #{display})
	</insert>
	
	<select id="getPopularList" parameterType="int" resultMap="HomeDto">
		SELECT prn.book_num, b.img_path, b.NAME "bookName", b.author_num, au.NAME "authorName"
		FROM (SELECT DISTINCT a.book_num, ROWNUM r
		      FROM (SELECT p.book_num, count(p.book_num)
		            FROM payment p, book_category c, first_cate f
		            WHERE p.book_num=c.book_num
		            AND c.cate1_num=f.num
		            and f.num=#{firstCate}
		            and payment_date > trunc(SYSDATE-3)
		            GROUP BY p.book_num
		            ORDER BY 2 DESC)A
		      )prn, bookm b, author au
		WHERE prn.book_num=b.book_num
		AND b.author_num=Au.num
		<![CDATA[
			and prn.r<=20
		]]>
		ORDER BY prn.r asc
	</select>
	
	<select id="getPopularListPaper" parameterType="java.util.HashMap" resultMap="HomeDto">
		SELECT prn.book_num, b.img_path, b.NAME "bookName", b.author_num, au.NAME "authorName"
		FROM (SELECT DISTINCT a.book_num, ROWNUM r
		      FROM (SELECT p.book_num, count(p.book_num)
		            FROM payment p, book_category c, first_cate f, second_cate sc
		            WHERE p.book_num=c.book_num
		            and c.cate2_num=sc.num
		            AND c.cate1_num=f.num
		            AND f.num=#{firstCate}
		            and sc.num=#{seconCate}
		            and payment_date > trunc(SYSDATE-3)
		            GROUP BY p.book_num
		            ORDER BY 2 DESC)A
		      )prn, bookm b, author au
		WHERE prn.book_num=b.book_num
		AND b.author_num=Au.num
		<![CDATA[
			and prn.r<=20
		]]>
		ORDER BY prn.r ASC
	</select>
	
	<select id="getBestSellerWeek" parameterType="java.util.HashMap" resultMap="HomeDto">
		SELECT *
		from (SELECT prn.book_num, b.img_path, b.NAME "bookName", b.author_num, au.NAME "authorName", b.intro, b.price, b.rental_period, b.rental_price, p.pub_num "pub_num", p.NAME "pub_name", nvl(rs."star_point",0) "star_point", nvl(rs."star_count",0) "star_count", rownum rp
		FROM (SELECT DISTINCT a.book_num, ROWNUM r
		      FROM (SELECT p.book_num, count(p.book_num)
		            FROM payment p, book_category c, first_cate f
		            WHERE p.book_num=c.book_num
		            AND c.cate1_num=f.num
		            AND f.num=#{firstCate}
		            and payment_date > trunc(SYSDATE-#{day})
		            GROUP BY p.book_num
		            ORDER BY 2 DESC)A
		      )prn, bookm b, author au, publisher p,(SELECT round(sum(star_point) / count(star_point), 1) "star_point", count(star_point) "star_count", book_num
		                                              FROM (
		                                                SELECT rw.* FROM review rw, (
		                                                  SELECT DISTINCT ID, book_num
		                                                  FROM payment
		                                                ) pm
		                                                WHERE rw.book_num = pm.book_num
		                                                AND rw.ID = pm.ID
		                                              )
		                                              GROUP BY book_num
		                                            ) rs
		      WHERE prn.book_num=b.book_num
		      and prn.book_num= rs.book_num(+)
		      and b.pub_num=p.pub_num
			  <if test="rental=='yes'">
			  	  <![CDATA[and b.rental_period!='no']]>
			  </if>
		      AND b.author_num=au.num
		      ORDER BY prn.r ASC) p
		where p.rp BETWEEN #{startRow} AND #{endRow}
	</select>
	
 	<select id="getBestSellerWeekPaper" parameterType="java.util.HashMap" resultMap="HomeDto">
		SELECT *
		from (SELECT prn.book_num, b.img_path, b.NAME "bookName", b.author_num, au.NAME "authorName", b.intro, b.price, b.rental_period, b.rental_price, p.pub_num "pub_num", p.NAME "pub_name", nvl(rs."star_point",0) "star_point", nvl(rs."star_count",0) "star_count", rownum rp
		FROM (SELECT DISTINCT a.book_num, ROWNUM r
		      FROM (SELECT p.book_num, count(p.book_num)
		            FROM payment p, book_category c, first_cate f,second_cate sc
		            WHERE p.book_num=c.book_num
		            AND c.cate1_num=f.num
		            and c.cate2_num=sc.num
		            AND f.num=#{firstCate}
		            and sc.num=#{seconCate}
		            and payment_date > trunc(SYSDATE-#{day})
		            GROUP BY p.book_num
		            ORDER BY 2 DESC)A
		      )prn, bookm b, author au, publisher p,(SELECT round(sum(star_point) / count(star_point), 1) "star_point", count(star_point) "star_count", book_num
		                                              FROM (
		                                                SELECT rw.* FROM review rw, (
		                                                  SELECT DISTINCT ID, book_num
		                                                  FROM payment
		                                                ) pm
		                                                WHERE rw.book_num = pm.book_num
		                                                AND rw.ID = pm.ID
		                                              )
		                                              GROUP BY book_num
		                                            ) rs
		      WHERE prn.book_num=b.book_num
		      and prn.book_num= rs.book_num(+)
		      and b.pub_num=p.pub_num
			  <if test="rental=='yes'">
			  	  <![CDATA[and b.rental_period!='no']]>
			  </if>
		      AND b.author_num=au.num
		      ORDER BY prn.r ASC) p
		where p.rp BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<select id="getBestSellerWeekCount" parameterType="java.util.HashMap" resultType="int">
		SELECT nvl(count(*),0)
		FROM (SELECT DISTINCT a.book_num, ROWNUM r
		      FROM (SELECT p.book_num, count(p.book_num)
		            FROM payment p, book_category c, first_cate f
		            WHERE p.book_num=c.book_num
		            AND c.cate1_num=f.num
		            AND f.num=#{firstCate}
		            and payment_date > trunc(SYSDATE-#{day})
		            GROUP BY p.book_num
		            ORDER BY 2 DESC)A
		      )prn, bookm b, author au, publisher p,(SELECT round(sum(star_point) / count(star_point), 1) "star_point", count(star_point) "star_count", book_num
		                                              FROM (
		                                                SELECT rw.* FROM review rw, (
		                                                  SELECT DISTINCT ID, book_num
		                                                  FROM payment
		                                                ) pm
		                                                WHERE rw.book_num = pm.book_num
		                                                AND rw.ID = pm.ID
		                                              )
		                                              GROUP BY book_num
		                                            ) rs
		      WHERE prn.book_num=b.book_num
		      and prn.book_num= rs.book_num(+)
		      and b.pub_num=p.pub_num
			  <if test="rental=='yes'">
			  	  <![CDATA[and b.rental_period!='no']]>
			  </if>
		      AND b.author_num=au.num
		      ORDER BY prn.r ASC
	</select>
	
	<select id="getBestSellerSteady" parameterType="java.util.HashMap" resultMap="HomeDto">
		SELECT *
		from (SELECT prn.book_num, b.img_path, b.NAME "bookName", b.author_num, au.NAME "authorName", b.intro, b.price, b.rental_period, b.rental_price, p.pub_num "pub_num", p.NAME "pub_name", nvl(rs."star_point",0) "star_point", nvl(rs."star_count",0) "star_count", rownum rp
		FROM (SELECT DISTINCT a.book_num, ROWNUM r
		      FROM (SELECT p.book_num, count(p.book_num)
		            FROM payment p, book_category c, first_cate f
		            WHERE p.book_num=c.book_num
		            AND c.cate1_num=f.num
		            AND f.num=#{firstCate}
		            GROUP BY p.book_num
		            ORDER BY 2 DESC)A
		      )prn, bookm b, author au, publisher p,(SELECT round(sum(star_point) / count(star_point), 1) "star_point", count(star_point) "star_count", book_num
		                                              FROM (
		                                                SELECT rw.* FROM review rw, (
		                                                  SELECT DISTINCT ID, book_num
		                                                  FROM payment
		                                                ) pm
		                                                WHERE rw.book_num = pm.book_num
		                                                AND rw.ID = pm.ID
		                                              )
		                                              GROUP BY book_num
		                                            ) rs
		      WHERE prn.book_num=b.book_num
		      and prn.book_num= rs.book_num(+)
		      and b.pub_num=p.pub_num
			  <if test="rental=='yes'">
			  	  <![CDATA[and b.rental_period!='no']]>
			  </if>
		      AND b.author_num=au.num
		      ORDER BY prn.r ASC) p
		where p.rp BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<select id="getBestSellerSteadyCount" parameterType="java.util.HashMap" resultType="int">
		SELECT nvl(count(*),0)
		FROM (SELECT DISTINCT a.book_num, ROWNUM r
		      FROM (SELECT p.book_num, count(p.book_num)
		            FROM payment p, book_category c, first_cate f
		            WHERE p.book_num=c.book_num
		            AND c.cate1_num=f.num
		            AND f.num=#{firstCate}
		            GROUP BY p.book_num
		            ORDER BY 2 DESC)A
		      )prn, bookm b, author au, publisher p,(SELECT round(sum(star_point) / count(star_point), 1) "star_point", count(star_point) "star_count", book_num
		                                              FROM (
		                                                SELECT rw.* FROM review rw, (
		                                                  SELECT DISTINCT ID, book_num
		                                                  FROM payment
		                                                ) pm
		                                                WHERE rw.book_num = pm.book_num
		                                                AND rw.ID = pm.ID
		                                              )
		                                              GROUP BY book_num
		                                            ) rs
		      WHERE prn.book_num=b.book_num
		      and prn.book_num= rs.book_num(+)
		      and b.pub_num=p.pub_num
			  <if test="rental=='yes'">
			  	  <![CDATA[and b.rental_period!='no']]>
			  </if>
		      AND b.author_num=au.num
		      ORDER BY prn.r ASC
	</select>
	
	<select id="getFirstCate" parameterType="String" resultType="int">
		select num from first_cate where name=#{firstCateName}
	</select>
	
	<select id="getFirstCateName" parameterType="String" resultType="String">
		select name from first_cate where num=#{firstCate}
	</select>
	
	<select id="getFirstCateUseBookNum" parameterType="String" resultType="int">
		SELECT f.num
		FROM first_cate f, book_category c
		WHERE f.num=c.cate1_num
		and c.book_num=#{book_num}
	</select>
	
	<select id="getNewBookList" parameterType="java.util.HashMap" resultType="com.bf.book.dto.NewBookDto">
			SELECT *
			FROM (SELECT ROWNUM rnum, A.* 
			      FROM (SELECT b.book_num "book_num", b.img_path, b.NAME "book_name", au.num "author_num", au.NAME "author_name", il.num "illur_num", il.NAME "illur_name", tr.num "trans_num", tr.NAME "trans_name", pu.pub_num "pub_num", pu.NAME "publisher_name", b.intro, b.discount, b.discount2, b.price, b.rental_price, nvl(rs."star_point",0) "star_point", nvl(rs."star_count",0) "star_count" 
						FROM bookm b, author au, author il, author tr, publisher pu, (SELECT DISTINCT b.book_num
                                                                          FROM bookm b, book_category c, first_cate f
                                                                          WHERE b.book_num=c.book_num
                                                                          AND c.cate1_num=f.num
                                                                          AND f.num=#{firstCate}) dis, (SELECT round(sum(star_point) / count(star_point), 1) "star_point", count(star_point) "star_count", book_num
                                                                                              FROM (
                                                                                                SELECT rw.* FROM review rw, (
                                                                                                  SELECT DISTINCT ID, book_num
                                                                                                  FROM payment
                                                                                                ) pm
                                                                                                WHERE rw.book_num = pm.book_num
                                                                                                AND rw.ID = pm.ID
                                                                                              )
                                                                                              GROUP BY book_num
                                                                                            ) rs
						WHERE b.author_num=au.num
			            and b.book_num=rs.book_num(+)
			            and dis.book_num=b.book_num
						AND b.illustrator_num=il.num
						AND b.translator_num=tr.num
						AND b.pub_num=pu.pub_num
						  <if test="rental=='yes'">
						  	  <![CDATA[and b.rental_period!='no']]>
						  </if>
						ORDER BY b.write_date DESC)A
			      )r
	<![CDATA[
			where r.rnum >= #{startRow} and r.rnum <= #{endRow}
	]]>
	</select>
	
	<select id="getNewBookCount" parameterType="java.util.HashMap" resultType="int">
			SELECT nvl(count(*),0)
			      FROM (SELECT b.book_num "book_num", b.img_path, b.NAME "book_name", au.num "author_num", au.NAME "author_name", il.num "illur_num", il.NAME "illur_name", tr.num "trans_num", tr.NAME "trans_name", pu.pub_num "pub_num", pu.NAME "publisher_name", b.intro, b.discount, b.discount2, b.price, b.rental_price
						FROM bookm b, author au, author il, author tr, publisher pu, (SELECT DISTINCT b.book_num
                                                                          FROM bookm b, book_category c, first_cate f
                                                                          WHERE b.book_num=c.book_num
                                                                          AND c.cate1_num=f.num
                                                                          and f.num=#{firstCate}) dis
						WHERE b.author_num=au.num
            			and dis.book_num=b.book_num
						AND b.illustrator_num=il.num
						AND b.translator_num=tr.num
						AND b.pub_num=pu.pub_num
						  <if test="rental=='yes'">
						  	  <![CDATA[and b.rental_period!='no']]>
						  </if>
						ORDER BY b.write_date DESC)A
	</select>
	
	<select id="select-review-self" parameterType="java.util.Map" resultType="com.bf.book.dto.ReviewPageDto">
		SELECT * FROM review WHERE book_num = #{book_num} AND ID = #{id}
	</select>
	
	<select id="select-review-list" parameterType="Integer" resultType="com.bf.book.dto.ReviewPageDto">
		SELECT write_date, rw.num, substr(rw.ID,1,3) || '***' "id", rw.book_num, CONTENT, star_point, spoiler, preference, display, pm."buyer"
		FROM review rw, (
		  SELECT DISTINCT ID, 'on' "buyer"
		  FROM payment
		  WHERE book_num = #{book_num} 
		) pm
		WHERE rw.book_num = #{book_num} 
		AND rw.ID = pm.ID(+)
		ORDER BY write_date DESC
	</select>
	
	<update id="update-review" parameterType="com.bf.book.dto.ReviewDto">
		UPDATE review SET CONTENT = #{content}, star_point = #{star_point}, spoiler = #{spoiler} WHERE num = #{num}
	</update>

	<select id="select-reply-list" parameterType="Integer" resultType="com.bf.book.dto.ReplyDto">
		SELECT num, substr(id,1,3) || '***' "id", content, write_date, review_num FROM review_reply WHERE review_num = #{num} ORDER BY write_date DESC
	</select>
	
	<insert id="insert-reply" parameterType="com.bf.book.dto.ReplyDto">
		INSERT INTO review_reply(num, ID, CONTENT, write_date, review_num) VALUES (review_reply_num_seq.nextval, #{id}, #{content}, #{write_date}, #{review_num})
	</insert>
	
	<delete id="delete-review" parameterType="java.util.Map">
		DELETE FROM review WHERE id = #{id} and num = #{num}
	</delete>
	
	<select id="getRecomList" parameterType="int" resultMap="HomeDto">
		<![CDATA[
			SELECT  b.img_path, A.NAME "authorName", b.author_num "author_num",b.NAME "bookName", b.book_num, rev."star_point", rev."star_count"
			FROM bookm b, author A, (SELECT bm.book_num, bm.NAME, bm.price, bm.TYPE, nvl(rs."star_point",0) "star_point", nvl(rs."star_count",0) "star_count"
			                        FROM bookm bm, (SELECT round(sum(star_point) / count(star_point), 1) "star_point", count(star_point) "star_count", book_num
			                                        FROM (
			                                          SELECT rw.* FROM review rw, (
			                                            SELECT DISTINCT ID, book_num
			                                            FROM payment
			                                          ) pm
			                                          WHERE rw.book_num = pm.book_num
			                                          AND rw.ID = pm.ID
			                                        )
			                                        GROUP BY book_num
			                                      ) rs
			WHERE bm.book_num = rs.book_num(+)
			and bm.book_num=#{randomBookNum}) rev
			WHERE b.author_num = A.num
			and b.book_num=#{randomBookNum}
		]]>
	</select>
	
	<select id="getRecomCount" parameterType="long" resultType="int">
		SELECT nvl(count(c.cate2_num),0)
		FROM bookm b, book_category c
		WHERE b.book_num=c.book_num
		AND b.book_num =#{book_num}
	</select>
	
	<select id="getRandomBookNum" parameterType="int" resultType="int">
		<![CDATA[
			SELECT b.book_num                                
			from (SELECT b.book_num, ROWNUM r
			      from  bookm b, book_category c, first_cate f
			      WHERE b.book_num=c.book_num
			      AND c.cate1_num=f.num
			      AND f.num=#{firstCate}
			      order by DBMS_RANDOM.RANDOM ) b
			where b.r<=50
		]]>			                                
	</select>
	
	<select id="getBookSecondCate" parameterType="int" resultType="int">
		<![CDATA[
			SELECT DISTINCT sc.num
			FROM bookm b, book_category c, second_cate sc
			WHERE b.book_num=c.book_num
			AND c.cate2_num=sc.num
			AND sc.NAME LIKE '%단행본%'
			and sc.first_cate=#{firstCate}
		]]>
	</select>
	
	<select id="getPaperRandomBookNum" parameterType="java.util.HashMap" resultType="int">
		<![CDATA[
			SELECT b.book_num                              
			FROM (SELECT b.book_num, ROWNUM r, sc.NAME
			      from  bookm b, book_category c, first_cate f, second_cate sc
			      WHERE b.book_num=c.book_num
			      AND c.cate1_num=f.num
			      and c.cate2_num=sc.num
			      AND f.num=#{firstCate}
			      AND sc.num=#{seconCate}
            order by DBMS_RANDOM.RANDOM) b
			where b.r<=20
		]]>
	</select>
	
	<select id="getPaperNewBookCount" parameterType="java.util.HashMap" resultType="int">
			SELECT nvl(count(*),0)
			FROM (SELECT b.book_num "book_num", b.img_path, b.NAME "book_name", au.num "author_num", au.NAME "author_name", il.num "illur_num", il.NAME "illur_name", tr.num "trans_num", tr.NAME "trans_name", pu.pub_num "pub_num", pu.NAME "publisher_name", b.intro, b.discount, b.discount2, b.price, b.rental_price
			      FROM bookm b, author au, author il, author tr, publisher pu, (SELECT DISTINCT b.book_num
			                                                                    FROM bookm b, book_category c, first_cate f, second_cate s
			                                                                    WHERE b.book_num=c.book_num
			                                                                    AND c.cate1_num=f.num
			                                                                    AND c.cate2_num=s.num
			                                                                    AND f.num=#{firstCate}
			                                                                    and s.num=#{seconCate}) dis
			      WHERE b.author_num=au.num
	              and dis.book_num=b.book_num
			      AND b.illustrator_num=il.num
			      AND b.translator_num=tr.num
			      AND b.pub_num=pu.pub_num
				  <if test="rental=='yes'">
				  	  <![CDATA[and b.rental_period!='no']]>
				  </if>
			      ORDER BY b.write_date DESC)A
	</select>
	
	<select id="getPaperNewBookList" parameterType="java.util.HashMap" resultType="com.bf.book.dto.NewBookDto">
			SELECT *
			FROM (SELECT ROWNUM rnum, A.* 
			      FROM (SELECT b.book_num "book_num", b.img_path, b.NAME "book_name", au.num "author_num", au.NAME "author_name", il.num "illur_num", il.NAME "illur_name", tr.num "trans_num", tr.NAME "trans_name", pu.pub_num "pub_num", pu.NAME "publisher_name", b.intro, b.discount, b.discount2, b.price, b.rental_price, nvl(rs."star_point",0) "star_point", nvl(rs."star_count",0) "star_count" 
						FROM bookm b, author au, author il, author tr, publisher pu, (SELECT DISTINCT b.book_num
                                                                          FROM bookm b, book_category c, first_cate f, second_cate s
                                                                          WHERE b.book_num=c.book_num
                                                                          AND c.cate1_num=f.num
                                                                          AND c.cate2_num=s.num
                                                                          AND f.num=#{firstCate}
                                                                          and s.num=#{seconCate}) dis, (SELECT round(sum(star_point) / count(star_point), 1) "star_point", count(star_point) "star_count", book_num
                                                                                              FROM (
                                                                                                SELECT rw.* FROM review rw, (
                                                                                                  SELECT DISTINCT ID, book_num
                                                                                                  FROM payment
                                                                                                ) pm
                                                                                                WHERE rw.book_num = pm.book_num
                                                                                                AND rw.ID = pm.ID
                                                                                              )
                                                                                              GROUP BY book_num
                                                                                            ) rs
						WHERE b.author_num=au.num
			            and b.book_num=rs.book_num(+)
			            and dis.book_num=b.book_num
						AND b.illustrator_num=il.num
						AND b.translator_num=tr.num
						AND b.pub_num=pu.pub_num
						  <if test="rental=='yes'">
						  	  <![CDATA[and b.rental_period!='no']]>
						  </if>
						ORDER BY b.write_date DESC)A
			      )r
		<![CDATA[
			where r.rnum >= #{startRow} and r.rnum <= #{endRow}
		]]>
	</select>
	
	<select id="getBookAllInfo" parameterType="long" resultMap="DetailDto">
		<![CDATA[
			SELECT b.book_num, b.NAME "book_name", b.write_date, b.pub_num, b.author_num, b.illustrator_num "illu_num", b.translator_num "trans_num", b.price "book_price", b.support, b.img_path, b.file_path, b.file_size, b.preference, b.series_num, b.sub_title "book_sub_title", b.discount, b.discount2, b.TYPE "type", b.intro, b.pub_intro, b.rental_period, b.rental_price, nvl(rs."star_point",0) "star_point", nvl(rs."star_count",0) "star_count"
			FROM bookm b, (SELECT round(sum(star_point) / count(star_point), 1) "star_point", count(star_point) "star_count", book_num
			                FROM (SELECT rw.* FROM review rw, (
			                        SELECT DISTINCT ID, book_num
			                        FROM payment
			                      ) pm
			                      WHERE rw.book_num = pm.book_num
			                      AND rw.ID = pm.ID)
			                GROUP BY book_num) rs
			WHERE b.book_num=#{book_num}
			and b.book_num= rs.book_num(+)
		]]>
	</select>
	
	<select id="getSecondCateNum" parameterType="long" resultType="int">
		SELECT DISTINCT sc.num
		FROM second_cate sc, book_category c, bookm b
		WHERE b.book_num=c.book_num
		AND c.cate2_num=sc.num
		and b.book_num=#{book_num}
	</select>
	
	<select id="getSecondCateName" parameterType="long" resultType="String">
		SELECT DISTINCT sc.name
		FROM second_cate sc, book_category c, bookm b
		WHERE b.book_num=c.book_num
		AND c.cate2_num=sc.num
		and b.book_num=#{book_num}
	</select>
	
	<select id="getThirdNameOverlap" parameterType="long" resultType="String">
		SELECT dis.NAME
		FROM (SELECT sc.name, rownum r
		      FROM third_cate sc, book_category c
		      WHERE c.book_num=#{book_num}
		      AND c.cate3_num=sc.num) dis
		where dis.r=1
	</select>
	
	<select id="getPubName" parameterType="long" resultType="String">
		SELECT p.name
		FROM bookm b, publisher p
		WHERE b.pub_num=p.pub_num
		and b.book_num=#{book_num}
	</select>
	
	<select id="getAuthorInfo" parameterType="long" resultType="com.bf.manager.dto.AuthorDto">
		SELECT A.*, c.country_name
		FROM author a, country c
		WHERE num=#{author_num}
		and A.country_num=c.country_num
	</select>
	
	<select id="getAuthorBook" parameterType="long" resultMap="HomeDto">
		SELECT b.img_path, b.NAME "bookName", A.NAME "authorName", b.book_num, A.num "author_num", nvl(rs."star_point",0) "star_point", nvl(rs."star_count",0) "star_count"
		FROM bookm b, author A, (SELECT round(sum(star_point) / count(star_point), 1) "star_point", count(star_point) "star_count", book_num
		                          FROM (SELECT rw.* FROM review rw, (
		                                  SELECT DISTINCT ID, book_num
		                                  FROM payment
		                                ) pm
		                                WHERE rw.book_num = pm.book_num
		                                AND rw.ID = pm.ID)
		                          GROUP BY book_num) rs
		WHERE b.author_num=A.num
		AND A.num=#{author_num}
		AND b.book_num= rs.book_num(+)
		ORDER BY b.write_date desc
	</select>
	
	<select id="getExample" parameterType="int" resultType="com.bf.book.dto.ExampleDto">
		select *
		FROM example
		where f_num=#{first}
	</select>
	
	<select id="getTagListCount" parameterType="java.util.HashMap" resultType="int">
			SELECT nvl(count(DISTINCT b.book_num),0)
			FROM bookm b, keyword_list l, book_category c, first_cate f
			WHERE b.book_num=l.book_num
			and b.book_num=c.book_num
			and c.cate1_num=f.num
			and f.num=#{firstCateNum}
			<foreach collection="list" item="tag" separator="" open="" close="">
           		and l.book_num in(SELECT DISTINCT book_num
                FROM keyword_list
                where keyword_num =(SELECT num
                                  FROM keyword
                                  WHERE NAME=#{tag}))
        	</foreach>
	</select>
	
	<select id="getTagBookList" parameterType="java.util.HashMap" resultMap="HomeDto">
			SELECT * 
				FROM (
				  SELECT b.img_path, A.NAME "authorName", b.NAME "bookName", p.pub_num, p.NAME "pub_name", b.book_num, b.price, b.TYPE, b.author_num, b.rental_price, nvl(rs."star_point",0) "star_point", nvl(rs."star_count",0) "star_count", b.intro ,ROWNUM r
				  FROM bookm b, author A, publisher p, book_category c, first_cate f, (
				    SELECT round(sum(star_point) / count(star_point), 1) "star_point", count(star_point) "star_count", book_num
				    FROM (
				      SELECT rw.* FROM review rw, (
				        SELECT DISTINCT ID, book_num
				        FROM payment
				      ) pm
				      WHERE rw.book_num = pm.book_num
				      AND rw.ID = pm.ID
				    )
				    GROUP BY book_num
				  ) rs  
				  WHERE b.author_num=A.num
				  and b.book_num = rs.book_num(+)
			      AND b.pub_num=p.pub_num
			      and b.book_num=c.book_num
				  and c.cate1_num=f.num
				  and f.num=#{firstCateNum}
			      and b.book_num in(SELECT DISTINCT b.book_num
			                        FROM bookm b, keyword_list l
			                        WHERE b.book_num=l.book_num
			                        <foreach collection="list" item="query" separator="" open="" close="">
			                        and l.book_num in(SELECT DISTINCT book_num
			                                        FROM keyword_list
			                                        where keyword_num =(SELECT num
			                                                          FROM keyword
			                                                          WHERE NAME=#{query}))
									</foreach>
						             )
					ORDER BY b.write_date DESC) rn
			<foreach collection="page" item="pagea" index="i" separator="" open="" close="">				
				<choose>
					<when test="i==0">
						where rn.r >= #{pagea} 
					</when>
					
					<when test="i==1">
						<![CDATA[
							and rn.r <= #{pagea}
						]]>
					</when>
				</choose>
			</foreach>
	</select>
	
	<select id="getKeyword" parameterType="long" resultType="String">
		SELECT k.NAME
		FROM keyword k, keyword_list l
		WHERE k.num=l.keyword_num
		and l.book_num=#{book_num}
	</select>
	
	<select id="getDetailCate" parameterType="long" resultType="com.bf.book.dto.DetailCateDto">
		SELECT f.num "first_num", f.name "first_name", sc.num "second_num", sc.NAME "second_name", t.num "third_num", t.NAME "third_name"
		FROM second_cate sc, book_category c, bookm b, third_cate t,first_cate f
		WHERE b.book_num=c.book_num
   		and c.cate1_num=f.num
		AND c.cate2_num=sc.num
    	and c.cate3_num=t.num
		and b.book_num=#{book_num}
	</select>
	
	<!-- 도서 상세페이지 들어가면 최근 본 책으로 데이터 넘어감 -->
	<insert id="recent_look_book_insert" parameterType="com.bf.myPage.dto.MyPageRecentLookBookDto" >
		Insert into RECENT_LOOKBOOK (NUM,ID,BOOK_NUM,LOOK_DATE,DESTROY_DATE) values (RECENT_LOOKBOOK_num_seq.nextval, #{id},#{book_num},to_date('18/02/22','RR/MM/DD'),to_date('18/03/08','RR/MM/DD'))
	</insert>
</mapper>