<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bf.mapper.MyPageMapper">
	<resultMap type="com.bf.myPage.dto.MyPagePointDto" id="myPagePointDto">
		<result property="num" column="num"/>
		<result property="id" column="id"/>
		<result property="point" column="point"/>
		<result property="point_type" column="point_type"/>
		<result property="charge_date" column="charge_date"/>
		<result property="destory_date" column="destory_date"/>
		<result property="state" column="state"/>
	</resultMap>
	
	<resultMap type="com.bf.myPage.dto.MyPagePurchasedPageDto" id="myPagePurchasedPageDto">
		<result property="book_num" column="book_num"/>
		<result property="img_path" column="img_path"/>
		<result property="book_name" column="book_name"/>
		<result property="author_name" column="author_name"/>
	</resultMap>
	
	<resultMap type="com.bf.order.dto.OrderDto" id="orderDto">
		<result property="num" column="num"/>
		<result property="order_num" column="order_num"/>
		<result property="book_num" column="book_num"/>
		<result property="price" column="price"/>
		<result property="payment_date" column="payment_date"/>
		<result property="present_check" column="present_check"/>
		<result property="cancel_check" column="cancel_check"/>
		<result property="free_pass" column="free_pass"/>
		<result property="id" column="id"/>
		<result property="pay_type" column="pay_type"/>
		<result property="point_use" column="point_use"/>
		<result property="cash_use" column="cash_use"/>
		<result property="rental_date" column="rental_date"/>
		<result property="rental_state" column="rental_state"/>
		<result property="point" column="point"/>
		<result property="cash_type" column="cash_type"/>
		<result property="state" column="state"/>
	</resultMap>
	
	<resultMap type="com.bf.member.model.MemberDto" id="memberDto">
		<result property="num" column="num"/>
		<result property="id" column="id"/>
		<result property="password" column="password"/>
		<result property="email" column="email"/>
		<result property="gender" column="gender"/>
		<result property="register_date" column="register_date"/>
		<result property="birthday" column="birthday"/>
		<result property="marketing_check" column="marketing_check"/>
		<result property="ip" column="ip"/>
		<result property="last_join" column="last_join"/>
		<result property="phone" column="phone"/>
		<result property="role" column="role"/>
		<result property="name" column="name"/>
	</resultMap>

	<insert id="point_insert" parameterType="com.bf.myPage.dto.MyPagePointDto">
		insert into point(num, id, point, point_type, state, remain)
		values(POINT_num_seq.nextval, #{id}, (SELECT CHARGE_CASH * PERCENTAGE / 100 "POINT"
		from CASH_CHARGE_MENU where id = #{point}), #{point_type}, #{state}, (SELECT CHARGE_CASH * PERCENTAGE / 100 "POINT"
		from CASH_CHARGE_MENU where id = #{point}))
	</insert>
	
	<insert id="cash_charge_insert" parameterType="com.bf.myPage.dto.MyPageCashChargeDto">
		INSERT INTO cash_charge
		VALUES(CASH_CHARGE_num_seq.nextval, #{id}, (SELECT charge_cash FROM CASH_CHARGE_MENU WHERE ID = #{charge_cash}),
		(SELECT num FROM POINT WHERE num = (SELECT MAX(num) FROM point)),
		#{charge_type_num}, SYSDATE, #{cash_type}, (select #{order_num} || lpad(num, 3, '0') from member where id = #{id}))
	</insert>
	
	<select id="point_select" parameterType="String" resultType="int">
		<![CDATA[
			SELECT nvl(sum(remain),0) FROM point
			WHERE destory_date >= SYSDATE
			AND destory_date < SYSDATE + 11
			AND id = #{id}
		]]>
	</select>
	
	<select id="point-select-available" parameterType="String" resultType="Integer">
		SELECT nvl(SUM(REMAIN),0) FROM POINT
		WHERE DESTORY_DATE >= SYSDATE
		AND ID = #{id}
	</select>
	
	<select id="cash-select-available" parameterType="String" resultType="Integer">
		SELECT nvl(cc."cash_use",0) - nvl(pm."cash_use", 0) FROM (
			SELECT sum(charge_cash) "cash_use" FROM cash_charge
			WHERE ID = #{id}
		) cc, (
			SELECT sum(cash_use) "cash_use" FROM payment
			WHERE ID = #{id}
		) pm
	</select>
	
	<select id="point_select_list" parameterType="String" resultType="com.bf.myPage.dto.MyPagePointDto">
		SELECT pt.num, id, point, point_type, charge_date, destory_date, nvl(ptd."state", 'on') "STATE", remain
		FROM (
			SELECT * FROM point
			WHERE id = #{id}
		) pt, (
			SELECT num, 'off' "state" FROM point
			<![CDATA[WHERE destory_date < SYSDATE]]>
			AND id = #{id}
		) ptd
		WHERE pt.num = ptd.num(+)
		ORDER BY charge_date DESC, num DESC
	</select>
	
	<select id="cash_page_select_list" parameterType="String" resultType="com.bf.myPage.dto.MyPageCashPageDto">
		select cash_charge.CHARGE_DATE, cash_charge.CASH_TYPE, cash_charge.CHARGE_CASH, point.POINT, cash_charge_type.charge_type, cash_charge.ORDER_NUM from cash_charge, cash_charge_type, point where cash_charge.POINT_NUM = point.num and cash_charge.CHARGE_TYPE_NUM = cash_charge_type.num and cash_charge.id = #{id} order by charge_date desc
	</select>
	
	<select id="recent_page_select_list" parameterType="String" resultType="com.bf.myPage.dto.MyPageRecentPageDto">
		SELECT distinct bm.book_num "book_num", bm.img_path "img_path", bm.NAME "book_name", A.NAME "author_name", rs."star_point", rs."star_count", rb.LOOK_DATE, A.num "author_num"
		FROM RECENT_LOOKBOOK rb, bookm bm, author A, 
		(SELECT round(sum(star_point) / count(star_point), 1) "star_point", count(star_point) "star_count", book_num FROM review GROUP BY book_num) rs
		WHERE bm.book_num = rb.book_num AND rb.book_num = rs.book_num(+) AND bm.author_num = A.num and rb.ID = #{id}
		order by rb.LOOK_DATE
	</select>
	
	<select id="all_purchased_page_select_list" parameterType="String" resultType="com.bf.myPage.dto.MyPagePurchasedPageDto">
		SELECT bm.book_num, bm.img_path, bm.NAME "book_name", au.NAME "author_name", pm."payment_date", au.num "author_num"  FROM bookm bm, (
			SELECT book_num, min(payment_date) "payment_date" FROM payment
			WHERE ID = #{id}
			AND state = 'yes'
			GROUP BY book_num
		) pm, author au
		WHERE bm.book_num = pm.book_num
		AND bm.author_num = au.num
		ORDER BY pm."payment_date", bm.name
	</select>
	
	<select id="select-purchased-count" parameterType="String" resultType="Integer">
		SELECT count(DISTINCT book_num) FROM payment WHERE ID = #{id} AND state = 'yes'
	</select>
	
	<update id="purchased_delete" parameterType="java.util.Map">
		update payment set state = 'no' where id = #{id} and book_num in 
		  <foreach item="item" index="index" collection="book_num"
		      open="(" separator="," close=")">
		        #{item}
		  </foreach>
	</update>
	
	<delete id="recent_delete" parameterType="String">
		delete from RECENT_LOOKBOOK where id = #{id}
	</delete>
	
	<select id="history_click_select" parameterType="java.util.Map" resultType="com.bf.order.dto.OrderDto">
		select cc.order_num, cc.cash_type, cc.CHARGE_CASH "PRICE", 0 "cash_use", 0 "point_use", cct.CHARGE_TYPE "pay_type", p.POINT
		from cash_charge cc, CASH_CHARGE_TYPE cct, point p
		where cc.id = #{id} and cc.ORDER_NUM= #{order_num} and cc.POINT_NUM = p.NUM and cct.NUM = cc.CHARGE_TYPE_NUM
	</select>
	
	 <select id="search_purchased_page_select_list" parameterType="java.util.Map" resultType="com.bf.myPage.dto.MyPagePurchasedPageDto">
		select distinct bm.book_num "book_num", bm.img_path "img_path", bm.NAME "book_name", A.NAME "author_name" from bookm bm, author a, payment pm where bm.book_num = pm.book_num and bm.author_num = a.num and pm.id = #{id} and pm.state = 'yes' and (bm.name like '%'||#{searchValue}||'%' or a.name like '%'||#{searchValue}||'%')
	</select>
	
	<select id="five_purchased_page_select_list" parameterType="String" resultType="com.bf.myPage.dto.MyPagePurchasedPageDto">
		<![CDATA[
			select distinct bm.book_num as "book_num", bm.img_path as "img_path", bm.NAME as "book_name", A.NAME as "author_name", pm.PAYMENT_DATE as "payment_date"
			from bookm bm inner join author a on (bm.author_num = a.num ) inner join payment pm on (bm.book_num = pm.book_num)
			where pm.id = #{id} and pm.state = 'yes' and ROWNUM <= 5
			ORDER BY pm.PAYMENT_DATE
		]]>
	</select>
	
	<select id="five_recent_page_select_list" parameterType="String" resultType="com.bf.myPage.dto.MyPageRecentPageDto">
		<![CDATA[
			SELECT rb."num", bm.book_num "book_num", bm.img_path "img_path", bm.NAME "book_name", A.NAME "author_name", rs."star_point", rs."star_count", a.num "author_num"
			FROM (
				SELECT * FROM (
					SELECT max(num) "num", book_num FROM recent_lookbook
					WHERE ID = #{id}
					GROUP BY book_num
					ORDER BY "num" DESC
				)
				where rownum <= 5
			) rb, bookm bm, author A, (
				SELECT round(sum(star_point) / count(star_point), 1) "star_point", count(star_point) "star_count", book_num
				FROM review
				GROUP BY book_num
			) rs
			WHERE bm.book_num = rb.book_num
			AND rb.book_num = rs.book_num(+)
			AND bm.author_num = A.num
			AND ROWNUM <= 5
			ORDER BY rb."num" DESC
		]]>
	</select>
	
	<select id="select_InfoOk" parameterType="java.util.Map" resultType="String">
		select * from member where id = #{id} and password = #{password}
	</select>
	
	<select id="select_info" parameterType="String" resultType="com.bf.member.model.MemberDto">
		select * from member where id = #{id}
	</select>
	
	<update id="update_info" parameterType="com.bf.member.model.MemberDto">
		update member set password = #{password}, marketing_check = #{marketing_check} where id = #{id}
	</update>
	
	<select id="order_history_list" parameterType="String" resultType="com.bf.order.dto.OrderDto">
		SELECT py.num "num", py.ID "id", py.price "price", bm.name "book_name", cct.CHARGE_TYPE "pay_type", py.PAYMENT_DATE "payment_date", py.order_num "order_num"
		FROM payment py, CASH_CHARGE_TYPE cct, bookm bm
		WHERE py.id = #{id}
		AND cct.num = py.PAY_TYPE
		AND py.book_num = bm.book_num
		ORDER BY py.PAYMENT_DATE DESC
	</select>
	
	<!-- <select id="order_history_click_select" parameterType="java.util.Map" resultType="com.bf.order.dto.OrderDto">
		select cc.order_num, cc.cash_type, cc.CHARGE_CASH "PRICE", 0 "cash_use", 0 "point_use", cct.CHARGE_TYPE "pay_type", p.POINT "point"
		from cash_charge cc, CASH_CHARGE_TYPE cct, point p
		where cc.id = #{id} and cc.ORDER_NUM= #{order_num} and cc.POINT_NUM = p.NUM and cct.NUM = cc.CHARGE_TYPE_NUM
	</select> -->
	
	<select id="select-order-history-one" parameterType="java.util.Map" resultType="com.bf.order.dto.OrderDto">
		SELECT py.order_num "order_num", bm.name "book_name", py.price "PRICE", py.cash_use "cash_use", py.point_use "point_use", cct.charge_type "pay_type", py.present_check
		FROM cash_charge_type cct, payment py, bookm bm
		WHERE py.ID = #{id}
		AND py.order_num= #{order_num}
		AND cct.num = py.pay_type
		AND py.book_num = bm.book_num
	</select>
	
	<select id="select_member" parameterType="String" resultType="com.bf.member.model.MemberDto">
		select * from member where id = #{id}
	</select>
	
	<select id="select-review-list" parameterType="String" resultType="com.bf.myPage.dto.MyReviewDto">
		SELECT review.*, bookm.name "book_name" FROM review, bookm
		WHERE ID = #{id}
		AND review.book_num = bookm.book_num
	</select>
	
</mapper>